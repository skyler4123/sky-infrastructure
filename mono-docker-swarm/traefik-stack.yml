version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_data:/etc/traefik
    command:
      # - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"

      # API & Dashboard
      - "--api.dashboard=true" # Enable the dashboard
      - "--api.insecure=false" # Explicitly disable insecure API mod

      # Configure HTTP to HTTPS Redirection
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"

      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"

      - "--entrypoints.postgres.address=:5432"
      # Add Let’s Encrypt resolver configuration
      - "--certificatesresolvers.letsencrypt.acme.email=pkphung2001@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    networks:
      - traefik_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        # - "traefik.http.routers.traefik.rule=Host(`traefik.skyceer.com`)"
        # - "traefik.http.routers.traefik.service=api@internal"
        # - "traefik.http.routers.traefik.entrypoints=web"

        # Dashboard router
        - "traefik.http.routers.traefik.rule=Host(`traefik.skyceer.com`)"
        - "traefik.http.routers.traefik.entrypoints=websecure"
        - "traefik.http.routers.traefik.service=api@internal"
        - "traefik.http.routers.traefik.tls=true"

          # Service hint
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"
  whoami:
    image: traefik/whoami
    networks:
      - traefik_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.whoami.rule=Host(`whoami.skyceer.com`)"
        - "traefik.http.routers.whoami.entrypoints=websecure" # Changed to websecure (port 443)
        - "traefik.http.routers.whoami.tls=true" # Enable TLS
        - "traefik.http.routers.whoami.tls.certresolver=letsencrypt" # Use Let’s Encrypt resolver
        - "traefik.http.services.whoami.loadbalancer.server.port=80"
        # # HTTP to HTTPS redirect
        # - "traefik.http.routers.whoami-http.rule=Host(`whoami.skyceer.com`)"
        # - "traefik.http.routers.whoami-http.entrypoints=web"
        # - "traefik.http.routers.whoami-http.middlewares=redirect-to-https"
        # - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

networks:
  traefik_network:
    driver: overlay
    attachable: true

volumes:
  traefik_data:
    driver: local