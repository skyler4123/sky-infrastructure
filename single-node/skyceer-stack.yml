version: '3.8'

name: skyceer_development
services:
  skyceer-web:
    image: pkphung2001/skyceer_rails:latest
    environment:
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
    volumes:
      - skyceer-web_data:/rails
    ports:
      - "80:80"
      - "443:443"
    stdin_open: true
    tty: true
    networks:
      - skyceer_network
      - traefik_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          # - node.labels.hostname == postgresql_master
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.skyceer-web.rule=Host(`skyceer-web.skyceer.com`)" # Unique hostname
        - "traefik.http.routers.skyceer-web.entrypoints=websecure"
        - "traefik.http.routers.skyceer-web.tls=true"
        - "traefik.http.routers.skyceer-web.tls.certresolver=letsencrypt"
        - "traefik.http.services.skyceer-web.loadbalancer.server.port=80" # Internal port for the service


  skyceer-job:
    image: pkphung2001/skyceer_rails:latest
    command: bin/jobs
    environment:
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
    volumes:
      - skyceer_job_data:/rails
    depends_on:
      - skyceer-web
    networks:
      - skyceer_network
      - traefik_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          # - node.labels.hostname == postgresql_master

volumes:
  skyceer-web_data:
  skyceer_job_data:

networks:
  skyceer_network:
    driver: overlay
    attachable: true
  traefik_network:
    driver: overlay
    attachable: true